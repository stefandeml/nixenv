let mapleader=","

nnoremap gc :call NERDComment(0,"toggle")<CR>
vnoremap gc :call NERDComment(0,"toggle")<CR>

nnoremap d "_d
vnoremap d "_d
nnoremap D "_D

inoremap jj <Esc>
nmap <C-p> :Files<cr>

map <C-n> :NERDTreeMirrorToggle<CR>
nnoremap <tab> :tabnext<CR>
nnoremap <s-tab> :tabprev<CR>
nnoremap <C-t> :tabnew<CR>

noremap gt <C-w>gf
noremap gs <C-w>vgf
noremap gi <C-w>f

"imap <Tab> <C-X><C-F>

"""autocomple
imap <s-Tab> <C-X><C-F> 


""" Text
let g:surround_{char2nr('c')} = "\\\1command\1{\r}"
autocmd FileType mail,text,markdown,html,tex setlocal wrap

""" Appearance

  syntax on
  set nowrap

  " set cindent
  set expandtab
  set shiftwidth=2
  set softtabstop=2

  set laststatus=2
  set statusline=%F
  set ruler
  set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%))
  set previewheight=6  " small preview window for docstrings, etc.

  set wildmenu
  set showcmd
  set lazyredraw
  set showmatch        " show matching brackets
  """ set relativenumber   " relative numbers !!! wow

set ignorecase
set smartindent
set autoindent

  " Disable highlight when <leader><cr> is pressed
      map <silent> <leader><cr> :noh<cr>
   " Smart way to move between windows
      map <C-j> <C-W>j
      map <C-k> <C-W>k
      map <C-h> <C-W>h
      map <C-l> <C-W>l
" Appearance
syntax on
set background=dark
let g:gruvbox_contrast_dark ='hard'
colorscheme gruvbox
"colorscheme codedark

set tabstop=2
" Check file change every 4 seconds ('CursorHold') and reload the buffer upon detecting change
set autoread
au CursorHold * checktime

" Required for operations modifying multiple buffers like rename.
set hidden
set number

let g:rustfmt_autosave = 1

nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>

" NERDTree
let NERDTreeShowHidden = 1
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '-'
"nmap <silent> <C-n> :NERDTreeToggle<CR>
map <C-m> :NERDTreeFind<CR>
let g:NERDTreeMapActivateNode = '<tab>'
set mouse=a

:tnoremap <Esc> <C-\><C-n>

" fzf config
  nmap <C-p> :Files<cr>
  let g:fzf_action = {
    \ 'ctrl-t': 'tab split',
    \ 'ctrl-s': 'split',
    \ 'ctrl-i': 'vsplit' }
  let g:fzf_layout = { 'down': '~40%' }


function! NumberToggle()
    if(&relativenumber == 1)
        call AbsNumber()
    else
        call RelNumber()
    endif
endfunc

function! RelNumber()
    set nonumber
    set relativenumber
endfunc

function! AbsNumber()
    set norelativenumber
    set number
  endfunc
  nnoremap               <Leader>n            :call NumberToggle()<CR>
  nnoremap               <Leader>M            :set mouse=""<CR>
  nnoremap               <Leader>m            :set mouse=a<CR>
  nnoremap               <Leader>N            :set nonumber<CR>

imap <C-f> <plug>(fzf-complete-line)